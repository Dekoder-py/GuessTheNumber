name: Build EXE and macOS App

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    tags:
      - 'v*'

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest, macos-latest ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Download JavaFX JMODs
        run: |
          if [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            JMOD_URL="https://download2.gluonhq.com/openjfx/21.0.7/openjfx-21.0.7_osx-aarch64_bin-jmods.zip"
          else
            JMOD_URL="https://download2.gluonhq.com/openjfx/21.0.7/openjfx-21.0.7_windows-x64_bin-jmods.zip"
          fi

          curl -L -o javafx.zip "$JMOD_URL"
          unzip javafx.zip -d javafx
        shell: bash



      - name: Build with Maven
        run: mvn clean package

      - name: Create custom JRE (Windows)
        if: matrix.os == 'windows-latest'
        shell: cmd
        run: |
          set "JAVAFX_MODS=%CD%\\javafx\\javafx-jmods-21.0.7"
          if exist custom-jre rmdir /s /q custom-jre
          jlink --module-path "%JAVA_HOME%\\jmods;%JAVAFX_MODS%" ^
            --add-modules java.base,java.logging,javafx.base,javafx.controls,javafx.fxml ^
            --output custom-jre ^
            --compress=2 ^
            --no-header-files ^
            --no-man-pages

      - name: Create custom JRE (macOS)
        if: matrix.os == 'macos-latest'
        shell: bash
        run: |
          JAVAFX_MODS="$PWD/javafx/javafx-jmods-21.0.7"
          rm -rf custom-jre
          jlink \
            --module-path "$JAVA_HOME/jmods:$JAVAFX_MODS" \
            --add-modules java.base,java.logging,javafx.base,javafx.controls,javafx.fxml \
            --output custom-jre \
            --compress=2 \
            --no-header-files \
            --no-man-pages



      - name: Package app (Windows)
        if: matrix.os == 'windows-latest'
        shell: cmd
        run: |
          jpackage ^
            --type app-image ^
            --input target ^
            --name GuessTheNumber ^
            --main-jar GuessTheNumber-1.0.2.jar ^
            --main-class co.dekoderpy.guessthenumber.MainApplication ^
            --runtime-image custom-jre

      - name: Package app (macOS)
        if: matrix.os == 'macos-latest'
        shell: bash
        run: |
          jpackage \
            --type app-image \
            --input target \
            --name GuessTheNumber \
            --main-jar GuessTheNumber-1.0.2.jar \
            --main-class co.dekoderpy.guessthenumber.MainApplication \
            --runtime-image custom-jre



      - name: Upload macOS artifact
        if: runner.os == 'macOS'
        uses: actions/upload-artifact@v4
        with:
          name: GuessTheNumber-macOS
          path: GuessTheNumber.app

      - name: Upload Windows artifact
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: GuessTheNumber-Windows
          path: GuessTheNumber


  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: GuessTheNumber-Windows
          path: windows/

      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: GuessTheNumber-macOS
          path: macos/

      - name: Create GitHub Release and upload assets
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            windows/**
            macos/**
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
